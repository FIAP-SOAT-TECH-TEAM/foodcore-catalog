name: Destroy Pipeline

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  actions: read

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TF_VAR_subscription_id: ${{secrets.AZURE_SUBSCRIPTION_ID}}
  TF_VAR_foodcore-backend-resource-group: ${{secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME}}
  TF_VAR_foodcore-backend-storage-account: ${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}
  TF_VAR_foodcore-backend-container: ${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}
  TF_VAR_foodcore-backend-infra-key: ${{secrets.FOODCORE_INFRA_BACKEND_AZURE_KEY}}
  TF_VAR_foodcore-backend-db-key: ${{secrets.FOODCORE_DB_BACKEND_AZURE_KEY}}
  TF_VAR_foodcore-backend-auth-key: ${{secrets.FOODCORE_AUTH_BACKEND_AZURE_KEY}}
  TF_VAR_chart_name: "foodcoreapi"
  TF_VAR_chart_version: "0.1.${{ github.run_number }}"
  TF_VAR_docker_image_tag: "${{ github.run_number }}"
  TF_VAR_jwt_secret: ${{ secrets.FOODCORE_API_JWT_SECRET }}
  TF_VAR_swagger_path: "../build/openapi/swagger.json"
  TF_VAR_mercadopago_base_url: ${{ secrets.FOODCORE_API_MP_BASE_URL }}
  TF_VAR_mercadopago_token: ${{ secrets.FOODCORE_API_MP_TOKEN }}
  TF_VAR_mercadopago_user_id: ${{ secrets.FOODCORE_API_MP_USER_ID }}
  TF_VAR_mercadopago_pos_id: ${{ secrets.FOODCORE_API_MP_POS_ID }}
  TF_VAR_api_ingress_path: "/api"

jobs:
  infra-info:
    runs-on: ubuntu-latest
    env:
      TF_VAR_docker_image_uri: "default"
    outputs:
      acr_login_server: ${{ steps.acr.outputs.acr_login_server }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: terraform
        run: |
          terraform init \
            -backend-config="resource_group_name=${{secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME}}" \
            -backend-config="storage_account_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}" \
            -backend-config="container_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}" \
            -backend-config="key=${{secrets.BACKEND_AZURE_KEY}}"

      # Somente para que o output seja criado
      - name: Terraform Apply Refresh Only
        working-directory: terraform
        run: terraform apply --refresh-only --auto-approve

      - name: Get ACR Login Server from remote state
        id: acr
        working-directory: terraform
        run: echo "acr_login_server=$(terraform output -raw acr_login_server_from_remote)" >> $GITHUB_OUTPUT

  terraform-destroy:
    runs-on: ubuntu-latest
    needs: infra-info
    env:
      TF_VAR_docker_image_uri: "${{ needs.infra-info.outputs.acr_login_server }}/foodcoreapi"

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME}}" \
            -backend-config="storage_account_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}" \
            -backend-config="container_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}" \
            -backend-config="key=${{secrets.BACKEND_AZURE_KEY}}"

      - name: Download artifacts - OpenApi File
        uses: dawidd6/action-download-artifact@v11
        with:
          name: openapi
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ci.yaml
          workflow_search: true
          check_artifacts: true
          name_is_regexp: false
          if_no_artifact_found: fail
          path: build/openapi

      - name: Terraform Plan Destroy
        run: terraform plan -destroy -out=tfplan

      - name: Terraform Destroy with Plan
        run: terraform apply -destroy -auto-approve tfplan
